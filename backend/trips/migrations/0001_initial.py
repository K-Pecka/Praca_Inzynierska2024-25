# Generated by Django 5.1.7 on 2025-04-28 18:33

import django.core.validators
import django.db.models.deletion
import re
import trips.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExpenseType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Nazwa', max_length=124, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[a-zA-Z]+$'), 'Enter a valid alphabetic code')], verbose_name='Nazwa')),
            ],
            options={
                'verbose_name': 'Typ wydatku',
                'verbose_name_plural': 'Typy wydatków',
            },
        ),
        migrations.CreateModel(
            name='TicketType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Nazwa', max_length=124, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[a-zA-Z]+$'), 'Enter a valid alphabetic code')], verbose_name='Nazwa')),
            ],
            options={
                'verbose_name': 'Typ biletu',
                'verbose_name_plural': 'Typy biletów',
            },
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Nazwa', max_length=50, verbose_name='Nazwa')),
                ('start_date', models.DateField(help_text='Data rozpoczęcia', verbose_name='Data rozpoczęcia')),
                ('end_date', models.DateField(help_text='Data zakończenia', verbose_name='Data zakończenia')),
                ('settings', models.JSONField(default=dict, help_text='Ustawienia', verbose_name='Ustawienia')),
                ('creator', models.ForeignKey(help_text='Właściciel', on_delete=django.db.models.deletion.CASCADE, related_name='trips_as_creator', to='users.userprofile', verbose_name='Właściciel')),
                ('members', models.ManyToManyField(blank=True, help_text='Profil', related_name='trips_as_member', to='users.userprofile', verbose_name='Profil')),
            ],
            options={
                'verbose_name': 'Wycieczka',
                'verbose_name_plural': 'Wycieczki',
                'db_table': 'trips',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Nazwa biletu', max_length=255, verbose_name='Nazwa')),
                ('file', models.FileField(help_text='Bilet', upload_to='tickets/', verbose_name='Bilet')),
                ('valid_from_date', models.DateField(blank=True, help_text='Ważny od daty', null=True, verbose_name='Ważny od daty')),
                ('valid_from_time', models.TimeField(blank=True, help_text='Ważny od godziny', null=True, verbose_name='Ważny od godziny')),
                ('profile', models.ForeignKey(help_text='Profil', on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='users.userprofile', verbose_name='Profil')),
                ('type', models.ForeignKey(default=trips.models.get_default_ticket_type, help_text='Typ', on_delete=django.db.models.deletion.CASCADE, to='trips.tickettype', verbose_name='Typ')),
                ('trip', models.ForeignKey(help_text='Wycieczka', on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='trips.trip', verbose_name='Wycieczka')),
            ],
            options={
                'verbose_name': 'Bilet',
                'verbose_name_plural': 'Bilety',
                'db_table': 'tickets',
            },
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(help_text='Tytuł wydatku', max_length=255, verbose_name='Tytuł')),
                ('amount', models.DecimalField(decimal_places=2, default=0, help_text='Kwota wydatku', max_digits=7, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Kwota wydatku')),
                ('currency', models.CharField(choices=[('AED', 'UAE Dirham'), ('AFN', 'Afghani'), ('ALL', 'Lek'), ('AMD', 'Armenian Dram'), ('ANG', 'Netherlands Antillean Guilder'), ('AOA', 'Kwanza'), ('ARS', 'Argentine Peso'), ('AUD', 'Australian Dollar'), ('AWG', 'Aruban Florin'), ('AZN', 'Azerbaijan Manat'), ('BAM', 'Convertible Mark'), ('BBD', 'Barbados Dollar'), ('BDT', 'Taka'), ('BGN', 'Bulgarian Lev'), ('BHD', 'Bahraini Dinar'), ('BIF', 'Burundi Franc'), ('BMD', 'Bermudian Dollar'), ('BND', 'Brunei Dollar'), ('BOB', 'Boliviano'), ('BOV', 'Mvdol'), ('BRL', 'Brazilian Real'), ('BSD', 'Bahamian Dollar'), ('BTN', 'Ngultrum'), ('BWP', 'Pula'), ('BYN', 'Belarusian Ruble'), ('BZD', 'Belize Dollar'), ('CAD', 'Canadian Dollar'), ('CDF', 'Congolese Franc'), ('CHE', 'WIR Euro'), ('CHF', 'Swiss Franc'), ('CHW', 'WIR Franc'), ('CLF', 'Unidad de Fomento'), ('CLP', 'Chilean Peso'), ('CNY', 'Yuan Renminbi'), ('COP', 'Colombian Peso'), ('COU', 'Unidad de Valor Real'), ('CRC', 'Costa Rican Colon'), ('CUC', 'Peso Convertible'), ('CUP', 'Cuban Peso'), ('CVE', 'Cabo Verde Escudo'), ('CZK', 'Czech Koruna'), ('DJF', 'Djibouti Franc'), ('DKK', 'Danish Krone'), ('DOP', 'Dominican Peso'), ('DZD', 'Algerian Dinar'), ('EGP', 'Egyptian Pound'), ('ERN', 'Nakfa'), ('ETB', 'Ethiopian Birr'), ('EUR', 'Euro'), ('FJD', 'Fiji Dollar'), ('FKP', 'Falkland Islands Pound'), ('GBP', 'Pound Sterling'), ('GEL', 'Lari'), ('GHS', 'Ghana Cedi'), ('GIP', 'Gibraltar Pound'), ('GMD', 'Dalasi'), ('GNF', 'Guinean Franc'), ('GTQ', 'Quetzal'), ('GYD', 'Guyana Dollar'), ('HKD', 'Hong Kong Dollar'), ('HNL', 'Lempira'), ('HRK', 'Kuna'), ('HTG', 'Gourde'), ('HUF', 'Forint'), ('IDR', 'Rupiah'), ('ILS', 'New Israeli Sheqel'), ('INR', 'Indian Rupee'), ('IQD', 'Iraqi Dinar'), ('IRR', 'Iranian Rial'), ('ISK', 'Iceland Krona'), ('JMD', 'Jamaican Dollar'), ('JOD', 'Jordanian Dinar'), ('JPY', 'Yen'), ('KES', 'Kenyan Shilling'), ('KGS', 'Som'), ('KHR', 'Riel'), ('KMF', 'Comorian Franc'), ('KPW', 'North Korean Won'), ('KRW', 'Won'), ('KWD', 'Kuwaiti Dinar'), ('KYD', 'Cayman Islands Dollar'), ('KZT', 'Tenge'), ('LAK', 'Lao Kip'), ('LBP', 'Lebanese Pound'), ('LKR', 'Sri Lanka Rupee'), ('LRD', 'Liberian Dollar'), ('LSL', 'Loti'), ('LYD', 'Libyan Dinar'), ('MAD', 'Moroccan Dirham'), ('MDL', 'Moldovan Leu'), ('MGA', 'Malagasy Ariary'), ('MKD', 'Denar'), ('MMK', 'Kyat'), ('MNT', 'Tugrik'), ('MOP', 'Pataca'), ('MRU', 'Ouguiya'), ('MUR', 'Mauritius Rupee'), ('MVR', 'Rufiyaa'), ('MWK', 'Malawi Kwacha'), ('MXN', 'Mexican Peso'), ('MXV', 'Mexican Unidad de Inversion (UDI)'), ('MYR', 'Malaysian Ringgit'), ('MZN', 'Mozambique Metical'), ('NAD', 'Namibia Dollar'), ('NGN', 'Naira'), ('NIO', 'Cordoba Oro'), ('NOK', 'Norwegian Krone'), ('NPR', 'Nepalese Rupee'), ('NZD', 'New Zealand Dollar'), ('OMR', 'Rial Omani'), ('PAB', 'Balboa'), ('PEN', 'Sol'), ('PGK', 'Kina'), ('PHP', 'Philippine Peso'), ('PKR', 'Pakistan Rupee'), ('PLN', 'Zloty'), ('PYG', 'Guarani'), ('QAR', 'Qatari Rial'), ('RON', 'Romanian Leu'), ('RSD', 'Serbian Dinar'), ('RUB', 'Russian Ruble'), ('RWF', 'Rwanda Franc'), ('SAR', 'Saudi Riyal'), ('SBD', 'Solomon Islands Dollar'), ('SCR', 'Seychelles Rupee'), ('SDG', 'Sudanese Pound'), ('SEK', 'Swedish Krona'), ('SGD', 'Singapore Dollar'), ('SHP', 'Saint Helena Pound'), ('SLE', 'Leone'), ('SLL', 'Leone'), ('SOS', 'Somali Shilling'), ('SRD', 'Surinam Dollar'), ('SSP', 'South Sudanese Pound'), ('STN', 'Dobra'), ('SVC', 'El Salvador Colon'), ('SYP', 'Syrian Pound'), ('SZL', 'Lilangeni'), ('THB', 'Baht'), ('TJS', 'Somoni'), ('TMT', 'Turkmenistan New Manat'), ('TND', 'Tunisian Dinar'), ('TOP', 'Pa’anga'), ('TRY', 'Turkish Lira'), ('TTD', 'Trinidad and Tobago Dollar'), ('TWD', 'New Taiwan Dollar'), ('TZS', 'Tanzanian Shilling'), ('UAH', 'Hryvnia'), ('UGX', 'Uganda Shilling'), ('USD', 'US Dollar'), ('USN', 'US Dollar (Next day)'), ('UYI', 'Uruguay Peso en Unidades Indexadas (UI)'), ('UYU', 'Peso Uruguayo'), ('UYW', 'Unidad Previsional'), ('UZS', 'Uzbekistan Sum'), ('VED', 'Bolívar Soberano'), ('VES', 'Bolívar Soberano'), ('VND', 'Dong'), ('VUV', 'Vatu'), ('WST', 'Tala'), ('XAF', 'CFA Franc BEAC'), ('XAG', 'Silver'), ('XAU', 'Gold'), ('XBA', 'Bond Markets Unit European Composite Unit (EURCO)'), ('XBB', 'Bond Markets Unit European Monetary Unit (E.M.U.-6)'), ('XBC', 'Bond Markets Unit European Unit of Account 9 (E.U.A.-9)'), ('XBD', 'Bond Markets Unit European Unit of Account 17 (E.U.A.-17)'), ('XCD', 'East Caribbean Dollar'), ('XDR', 'SDR (Special Drawing Right)'), ('XOF', 'CFA Franc BCEAO'), ('XPD', 'Palladium'), ('XPF', 'CFP Franc'), ('XPT', 'Platinum'), ('XSU', 'Sucre'), ('XTS', 'Codes specifically reserved for testing purposes'), ('XUA', 'ADB Unit of Account'), ('XXX', 'The codes assigned for transactions where no currency is involved'), ('YER', 'Yemeni Rial'), ('ZAR', 'Rand'), ('ZMW', 'Zambian Kwacha'), ('ZWL', 'Zimbabwe Dollar')], default='PLN', help_text='Waluta wydatku', max_length=3, verbose_name='Waluta')),
                ('date', models.DateField(help_text='Data wydatku', verbose_name='Data')),
                ('note', models.TextField(blank=True, help_text='Notatka dotycząca wydatku (opcjonalne)', verbose_name='Notatka')),
                ('user', models.ForeignKey(blank=True, help_text='Osoba, która poniosła wydatek', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='users.userprofile', verbose_name='Użytkownik')),
                ('category', models.ForeignKey(default=trips.models.get_default_expense_type, help_text='Kategoria wydatku', on_delete=django.db.models.deletion.CASCADE, to='trips.expensetype', verbose_name='Kategoria')),
                ('trip', models.ForeignKey(help_text='Powiązana podróż', on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='trips.trip', verbose_name='Podróż')),
            ],
            options={
                'verbose_name': 'Wydatek',
                'verbose_name_plural': 'Wydatki',
                'db_table': 'expenses',
            },
        ),
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amount', models.DecimalField(decimal_places=2, default=0, help_text='Kwota budżetu', max_digits=7, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Kwota budżetu')),
                ('trip', models.OneToOneField(help_text='Powiązana wycieczka', on_delete=django.db.models.deletion.CASCADE, related_name='budgets', to='trips.trip', verbose_name='Wycieczka')),
            ],
            options={
                'verbose_name': 'Budżet',
                'verbose_name_plural': 'Budżety',
                'db_table': 'budgets',
            },
        ),
        migrations.CreateModel(
            name='TripAccessToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('token', models.CharField(help_text='Token', max_length=24, unique=True, verbose_name='Token')),
                ('is_pending', models.BooleanField(default=True, help_text='Czy oczekujący', verbose_name='Czy oczekujący')),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_tokens', to='trips.trip')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trip_access_tokens', to='users.userprofile')),
            ],
            options={
                'verbose_name': 'Token dostępu do wycieczki',
                'verbose_name_plural': 'Tokeny dostępu do wycieczek',
                'unique_together': {('trip', 'user_profile')},
            },
        ),
    ]
