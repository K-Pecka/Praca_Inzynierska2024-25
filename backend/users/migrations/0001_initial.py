# Generated by Django 5.1.7 on 2025-05-03 17:02

import django.core.validators
import django.db.models.deletion
import re
import users.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("permissions", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "email",
                    models.EmailField(
                        help_text="Adres email użytkownika",
                        max_length=254,
                        unique=True,
                        validators=[django.core.validators.EmailValidator()],
                        verbose_name="Adres email",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True,
                        help_text="Imię użytkownika",
                        max_length=32,
                        validators=[
                            django.core.validators.RegexValidator(
                                re.compile("^[a-zA-Z]+$"),
                                "Enter a valid alphabetic code",
                            )
                        ],
                        verbose_name="Imię",
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True,
                        help_text="Nazwisko użytkownika",
                        max_length=32,
                        validators=[
                            django.core.validators.RegexValidator(
                                re.compile("^[a-zA-Z]+$"),
                                "Enter a valid alphabetic code",
                            )
                        ],
                        verbose_name="Nazwisko",
                    ),
                ),
                (
                    "is_guest",
                    models.BooleanField(
                        default=False,
                        help_text="Czy konto gościa",
                        verbose_name="Czy gość",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=False,
                        help_text="Czy użytkownik aktywny",
                        verbose_name="Czy aktywny",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Czy użytkownik ma dostęp do admina",
                        verbose_name="Czy dostęp do admina",
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Czy super użytkownik",
                        verbose_name="Czy super użytkownik",
                    ),
                ),
            ],
            options={
                "verbose_name": "Użytkownik",
                "verbose_name_plural": "Użytkownicy",
            },
        ),
        migrations.CreateModel(
            name="UserProfileType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "code",
                    models.CharField(
                        help_text="Kod typu profilu",
                        max_length=16,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                re.compile("^[a-zA-Z]+$"),
                                "Enter a valid alphabetic code",
                            )
                        ],
                        verbose_name="Kod",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Nazwa typu profilu",
                        max_length=32,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                re.compile("^[a-zA-Z]+$"),
                                "Enter a valid alphabetic code",
                            )
                        ],
                        verbose_name="Nazwa",
                    ),
                ),
            ],
            options={
                "verbose_name": "Typ profilu użytkownika",
                "verbose_name_plural": "Typy profili użytkowników",
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "is_default",
                    models.BooleanField(
                        default=False,
                        help_text="Czy jest podstawowym profilem",
                        verbose_name="Czy jest podstawowym profilem",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="Użytkownik",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profiles",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Użytkownik",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        default=users.models.get_or_create_default_user_profile_type,
                        help_text="Typ profilu",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="profiles",
                        to="users.userprofiletype",
                        verbose_name="Typ profilu",
                    ),
                ),
            ],
            options={
                "verbose_name": "Profil",
                "verbose_name_plural": "Profile",
                "db_table": "users",
                "unique_together": {("user", "type")},
            },
        ),
        migrations.CreateModel(
            name="UserPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "permission",
                    models.ForeignKey(
                        help_text="Uprawnienia",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="permissions.custompermission",
                        verbose_name="Uprawnienia",
                    ),
                ),
                (
                    "profile",
                    models.ForeignKey(
                        help_text="Profil użytkownika",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="profile_to_permission",
                        to="users.userprofile",
                        verbose_name="Profil użytkownika",
                    ),
                ),
            ],
            options={
                "verbose_name": "Uprawnienie użytkownika",
                "verbose_name_plural": "Uprawniania użytkowników",
                "db_table": "profile_permissions",
                "constraints": [
                    models.UniqueConstraint(
                        fields=("profile", "permission"), name="unique_user_permission"
                    )
                ],
            },
        ),
    ]
